{"version":3,"sources":["components/search/Search.jsx","graphql/query.js","graphql/mutation.js","components/todoToggleComplete/TodoToggleComplete.jsx","components/myModal/MyModal.jsx","components/removeTodoItem/RemoveTodoItem.jsx","components/todoItem/TodoItem.jsx","components/addForm/AddForm.jsx","components/addTodoItem/AddTodoItem.jsx","context/context.js","components/logout/Logout.jsx","pages/myTodos/MyTodos.jsx","components/authButton/AuthButton.jsx","components/authContainer/AuthContainer.jsx","components/authInput/AuthInput.jsx","pages/registration/Registration.jsx","pages/login/Login.jsx","components/header/Header.jsx","components/router/Router.js","utils/Apollo.js","App.js","index.js"],"names":["Search","memo","setSearch","search","FormControl","variant","sx","maxWidth","width","InputLabel","htmlFor","Input","id","value","onChange","event","target","startAdornment","InputAdornment","position","color","fontSize","GET_CURRENT_USER","gql","GET_USER_POSTS","LOGIN_USER","REGISTER_USER","ADD_NEW_POST","REMOVE_POST","UPDATE_POST","TodoToggleComplete","completed","todos","setTodos","useMutation","updatePost","loading","onToggleCompleted","useCallback","a","variables","map","todo","alert","Checkbox","size","checked","disabled","onClick","MyModal","children","open","onClose","Modal","Box","top","left","transform","bgcolor","border","borderColor","borderRadius","boxShadow","p","RemoveTodoItem","postId","removePost","useState","modal","setModal","onClickRemove","filter","console","log","IconButton","Typography","mb","textAlign","component","display","justifyContent","Button","TodoItem","title","desc","padding","wordWrap","alignItems","gap","flex","overflow","flexDirection","AddForm","addNew","setTitle","setDesc","addNewTask","preventDefault","onSubmit","action","TextField","label","required","multiline","maxRows","type","AddNewTodo","setAlert","onCompleted","newPost","addPost","addNewPost","body","Snackbar","autoHideDuration","Alert","severity","AuthContext","createContext","Logout","setIsAuth","useContext","history","useHistory","localStorage","removeItem","push","Home","todosLoading","useQuery","data","getUserPosts","userData","userLoading","setSearchText","text","getItem","flexBlockStyles","flexWrap","marginBottom","height","CircularProgress","Container","marginBlock","textOverflow","getCurrentUser","username","AddTodoItem","Stack","spacing","length","toUpperCase","includes","AuthButton","AuthContainer","minHeight","AuthInput","props","Registration","login","setLogin","password","setPassword","registerUser","Login","loginUser","setItem","to","Header","backgroundColor","Router","isAuth","exact","path","MyTodos","httpLink","createHttpLink","uri","process","authLink","setContext","_","headers","token","authorization","apolloClient","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","App","useEffect","Provider","ApolloProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ac7746c.chunk.js","sourcesContent":["import { memo } from 'react'\r\nimport { FormControl, Input, InputAdornment, InputLabel } from '@mui/material'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\n\r\nconst Search = memo(function Search({ setSearch, search }) {\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ maxWidth: 300, width: '100%' }}>\r\n      <InputLabel htmlFor=\"input-with-icon-adornment\">Search for todos</InputLabel>\r\n      <Input\r\n        id=\"input-with-icon-adornment\"\r\n        value={search}\r\n        onChange={(event) => setSearch(event.target.value)}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <SearchIcon color=\"primary\" fontSize=\"large\" />\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </FormControl>\r\n  )\r\n})\r\n\r\nexport default Search\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_POSTS = gql`\r\n  {\r\n    getAllPosts {\r\n      id\r\n      title\r\n      body\r\n      completed\r\n      author {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_USERS = gql`\r\n  query getAllUsers {\r\n    id\r\n    username\r\n    password\r\n    posts {\r\n      id\r\n      title\r\n      body\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER = gql`\r\n  query getUserById {\r\n    id\r\n    username\r\n    password\r\n    posts {\r\n      id\r\n      title\r\n      body\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n  {\r\n    getCurrentUser {\r\n      id\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER_POSTS = gql`\r\n  {\r\n    getUserPosts {\r\n      id\r\n      title\r\n      body\r\n      completed\r\n      author {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation LoginUser($username: String!, $password: String!) {\r\n    login(username: $username, password: $password)\r\n  }\r\n`\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation RegisterUser($username: String!, $password: String!) {\r\n    register(username: $username, password: $password)\r\n  }\r\n`\r\n\r\nexport const ADD_NEW_POST = gql`\r\n  mutation AddNewPost($title: String!, $body: String!, $completed: Boolean!) {\r\n    addPost(title: $title, body: $body, completed: $completed) {\r\n      id\r\n      title\r\n      body\r\n      author {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const REMOVE_POST = gql`\r\n  mutation RemovePost($postId: String!) {\r\n    deletePost(postId: $postId)\r\n  }\r\n`\r\n\r\nexport const UPDATE_POST = gql`\r\n  mutation UpdatePost($id: String!, $title: String, $body: String, $completed: Boolean) {\r\n    updatePost(id: $id, title: $title, body: $body, completed: $completed) {\r\n      title\r\n    }\r\n  }\r\n`\r\n","import { useMutation } from '@apollo/client'\r\nimport { Checkbox } from '@mui/material'\r\nimport { useCallback } from 'react'\r\nimport { UPDATE_POST } from '../../graphql/mutation'\r\n\r\nconst TodoToggleComplete = ({ id, completed, todos, setTodos }) => {\r\n  const [updatePost, { loading }] = useMutation(UPDATE_POST)\r\n  const onToggleCompleted = useCallback(\r\n    async (id, completed) => {\r\n      try {\r\n        await updatePost({\r\n          variables: {\r\n            id: id,\r\n            completed: completed,\r\n          },\r\n        })\r\n        setTodos(\r\n          todos.map((todo) => {\r\n            if (todo.id !== id) return todo\r\n            return { ...todo, completed: !todo.completed }\r\n          })\r\n        )\r\n      } catch (error) {\r\n        alert(error)\r\n      }\r\n    },\r\n    [updatePost, todos, setTodos]\r\n  )\r\n\r\n  return (\r\n    <Checkbox\r\n      size=\"large\"\r\n      checked={completed}\r\n      disabled={loading}\r\n      onClick={() => onToggleCompleted(id, !completed)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TodoToggleComplete\r\n","import { Box, Modal } from '@mui/material'\r\n\r\nconst MyModal = ({ children, open, onClose }) => {\r\n  return (\r\n    <Modal open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          maxWidth: 500,\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          bgcolor: 'background.paper',\r\n          border: '2px solid',\r\n          borderColor: 'primary.main',\r\n          borderRadius: '1rem',\r\n          boxShadow: 24,\r\n          p: 4,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MyModal\r\n","import { useMutation } from '@apollo/client'\r\nimport { useState } from 'react'\r\nimport { REMOVE_POST } from '../../graphql/mutation'\r\nimport { IconButton } from '@mui/material'\r\nimport { Box, Button, Typography } from '@mui/material'\r\nimport MyModal from '../myModal/MyModal'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\n\r\nconst RemoveTodoItem = ({ postId, todos, setTodos }) => {\r\n  const [removePost, { loading }] = useMutation(REMOVE_POST)\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const onClickRemove = async (id) => {\r\n    try {\r\n      await removePost({\r\n        variables: {\r\n          postId: id,\r\n        },\r\n      })\r\n      setModal(false)\r\n      setTodos(todos.filter((todo) => todo.id !== id))\r\n    } catch (error) {\r\n      alert('Ошибка')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label=\"delete\" onClick={() => setModal(true)}>\r\n        <DeleteIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n      <MyModal open={modal} onClose={() => setModal(false)}>\r\n        <Typography sx={{ mb: '1em', textAlign: 'center' }} variant=\"h5\" component=\"p\">\r\n          Вы действительно хотите удалить данную задачу?\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-around' }}>\r\n          <Button disabled={loading} variant=\"contained\" onClick={() => onClickRemove(postId)}>\r\n            Удалить\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={() => setModal(false)}>\r\n            Отменить\r\n          </Button>\r\n        </Box>\r\n      </MyModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RemoveTodoItem\r\n","import TodoToggleComplete from '../todoToggleComplete/TodoToggleComplete'\r\nimport RemoveTodoItem from '../removeTodoItem/RemoveTodoItem'\r\nimport { memo } from 'react'\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nconst TodoItem = memo(function Item({\r\n  todos,\r\n  setTodos,\r\n  postId,\r\n  title,\r\n  desc,\r\n  completed,\r\n  onToggleCompleted,\r\n}) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: '2px solid',\r\n        borderColor: 'primary.main',\r\n        padding: '1rem',\r\n        wordWrap: 'break-word',\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n        <TodoToggleComplete\r\n          id={postId}\r\n          onToggleCompleted={onToggleCompleted}\r\n          completed={completed}\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n        />\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '1rem',\r\n          }}\r\n        >\r\n          <Typography component=\"p\" variant=\"h5\">\r\n            {completed ? <del>{title}</del> : title}\r\n          </Typography>\r\n          <Typography component=\"p\" variant=\"h6\">\r\n            {completed ? <del>{desc}</del> : desc}\r\n          </Typography>\r\n        </Box>\r\n        <RemoveTodoItem todos={todos} setTodos={setTodos} postId={postId} />\r\n      </Box>\r\n    </Box>\r\n  )\r\n})\r\n\r\nexport default TodoItem\r\n","import { Box, Button, TextField, Typography } from '@mui/material'\r\nimport { memo, useState } from 'react'\r\n\r\nconst AddForm = memo(function AddForm({ addNew, loading }) {\r\n  const [title, setTitle] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n\r\n  const addNewTask = async (event) => {\r\n    event.preventDefault()\r\n    await addNew(title, desc, false)\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '0.7rem' }}\r\n      component=\"form\"\r\n      onSubmit={addNewTask}\r\n      action=\"\"\r\n    >\r\n      <Typography component=\"p\" variant=\"h5\">\r\n        Add new Todo\r\n      </Typography>\r\n      <TextField\r\n        label=\"Title\"\r\n        id=\"todo-title\"\r\n        required\r\n        value={title}\r\n        onChange={(event) => setTitle(event.target.value)}\r\n        sx={{ maxWidth: 400, width: '100%' }}\r\n        disabled={loading}\r\n      />\r\n      <TextField\r\n        id=\"todo-description\"\r\n        onChange={(event) => setDesc(event.target.value)}\r\n        required\r\n        value={desc}\r\n        label=\"Description\"\r\n        multiline\r\n        maxRows={6}\r\n        sx={{ maxWidth: 400, width: '100%' }}\r\n        disabled={loading}\r\n      />\r\n      <Button disabled={loading} variant=\"contained\" type=\"submit\">\r\n        Создать задачу\r\n      </Button>\r\n    </Box>\r\n  )\r\n})\r\n\r\nexport default AddForm\r\n","import { useMutation } from '@apollo/client'\r\nimport { Alert, Button, Snackbar } from '@mui/material'\r\nimport { useCallback, useState } from 'react'\r\nimport { ADD_NEW_POST } from '../../graphql/mutation'\r\nimport AddForm from '../addForm/AddForm'\r\nimport MyModal from '../myModal/MyModal'\r\n\r\nconst AddNewTodo = ({ setTodos, todos }) => {\r\n  const [modal, setModal] = useState(false)\r\n  const [alert, setAlert] = useState(false)\r\n\r\n  const [addNewPost, { loading }] = useMutation(ADD_NEW_POST, {\r\n    onCompleted: ({ addPost: newPost }) => {\r\n      setTodos([...todos, newPost])\r\n      setModal(false)\r\n    },\r\n  })\r\n\r\n  const addNewTask = useCallback(\r\n    async (title, desc, completed) => {\r\n      try {\r\n        await addNewPost({\r\n          variables: {\r\n            title: title,\r\n            body: desc,\r\n            completed: completed,\r\n          },\r\n        })\r\n      } catch (error) {\r\n        setAlert(true)\r\n        console.log(error)\r\n      }\r\n    },\r\n    [addNewPost]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" onClick={() => setModal(true)}>\r\n        Добавить новую задачу\r\n      </Button>\r\n      <MyModal open={modal} onClose={() => setModal(false)}>\r\n        <AddForm addNew={addNewTask} loading={loading} />\r\n      </MyModal>\r\n      <Snackbar open={alert} onClose={() => setAlert(false)} autoHideDuration={3000}>\r\n        <Alert onClose={() => setAlert(false)} sx={{ width: '100%' }} severity=\"error\">\r\n          Error!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewTodo\r\n","import { createContext } from 'react'\r\nexport const AuthContext = createContext(null)\r\n","import { Button } from '@mui/material'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/context'\r\n\r\nconst Logout = () => {\r\n  const { setIsAuth } = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  const onClickLogOut = () => {\r\n    localStorage.removeItem('token')\r\n    history.push('/')\r\n    setIsAuth(false)\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"outlined\" onClick={onClickLogOut}>\r\n      LOGOUT\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default Logout\r\n","import { useState, useCallback } from 'react'\r\nimport Search from '../../components/search/Search'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_CURRENT_USER, GET_USER_POSTS } from '../../graphql/query'\r\nimport TodoItem from '../../components/todoItem/TodoItem'\r\nimport AddTodoItem from '../../components/addTodoItem/AddTodoItem'\r\nimport Logout from '../../components/logout/Logout'\r\nimport { Box, CircularProgress, Container, Stack, Typography } from '@mui/material'\r\n\r\nconst Home = () => {\r\n  const [todos, setTodos] = useState()\r\n  const [search, setSearch] = useState('')\r\n\r\n  const { loading: todosLoading } = useQuery(GET_USER_POSTS, {\r\n    onCompleted: (data) => {\r\n      setTodos(data.getUserPosts)\r\n    },\r\n  })\r\n\r\n  const { data: userData, loading: userLoading } = useQuery(GET_CURRENT_USER)\r\n\r\n  const setSearchText = useCallback((text) => setSearch(text), [])\r\n\r\n  console.log(userData, localStorage.getItem('token'))\r\n\r\n  const searchTodos = () =>\r\n    todos?.filter((todo) => todo?.title?.toUpperCase().includes(search.toUpperCase()))\r\n\r\n  const flexBlockStyles = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n    gap: '1.3rem',\r\n    marginBottom: '1rem',\r\n  }\r\n\r\n  if (todosLoading || userLoading)\r\n    return (\r\n      <Box\r\n        sx={{\r\n          height: '50vh',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <CircularProgress size={150} />\r\n      </Box>\r\n    )\r\n\r\n  return (\r\n    <Container sx={{ marginBlock: '2rem' }}>\r\n      <Box sx={flexBlockStyles}>\r\n        <Typography\r\n          sx={{\r\n            width: 300,\r\n            display: 'inline-block',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n          variant=\"h5\"\r\n          component=\"p\"\r\n        >\r\n          {userData.getCurrentUser.username}\r\n        </Typography>\r\n        <Logout />\r\n      </Box>\r\n      <Box sx={flexBlockStyles}>\r\n        <AddTodoItem setTodos={setTodos} todos={todos} />\r\n        <Search search={search} setSearch={setSearchText} />\r\n      </Box>\r\n      <Typography\r\n        textAlign=\"center\"\r\n        variant=\"h4\"\r\n        component=\"p\"\r\n        marginBottom=\"1em\"\r\n        sx={{ overflow: 'auto' }}\r\n      >\r\n        {search ? `Search: ${search}` : 'My todos'}\r\n      </Typography>\r\n      <Stack spacing={1}>\r\n        {todos?.length === 0 && (\r\n          <Typography variant=\"h5\" component=\"p\" textAlign=\"center\">\r\n            Todos not found.\r\n          </Typography>\r\n        )}\r\n        {searchTodos()?.map((todo) => {\r\n          return (\r\n            <TodoItem\r\n              todos={todos}\r\n              setTodos={setTodos}\r\n              key={todo.id}\r\n              postId={todo.id}\r\n              title={todo.title}\r\n              desc={todo.body}\r\n              completed={todo.completed}\r\n            />\r\n          )\r\n        })}\r\n      </Stack>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { Button } from '@mui/material'\r\n\r\nconst AuthButton = ({ children, type = 'button', disabled }) => {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      variant=\"contained\"\r\n      sx={{ maxWidth: 200, width: '100%' }}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default AuthButton\r\n","import { Box } from '@mui/material'\r\n\r\nconst AuthContainer = ({ children, onSubmit }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        maxWidth: '100%',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={onSubmit}\r\n        action=\"\"\r\n        sx={{\r\n          maxWidth: 600,\r\n          width: '100%',\r\n          minHeight: 500,\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          gap: '1.2rem',\r\n          border: '1px solid rgba(0,0,0,0.3)',\r\n          padding: '1rem',\r\n          borderRadius: '0.5rem',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AuthContainer\r\n","import { TextField } from '@mui/material'\r\n\r\nconst AuthInput = (props) => (\r\n  <TextField variant=\"outlined\" sx={{ maxWidth: 300, width: '100%' }} required {...props} />\r\n)\r\n\r\nexport default AuthInput\r\n","import { useMutation } from '@apollo/client'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport AuthButton from '../../components/authButton/AuthButton'\r\nimport AuthContainer from '../../components/authContainer/AuthContainer'\r\nimport AuthInput from '../../components/authInput/AuthInput'\r\nimport { REGISTER_USER } from '../../graphql/mutation'\r\n\r\nconst Registration = () => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER)\r\n  const history = useHistory()\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await registerUser({\r\n        variables: {\r\n          username: login,\r\n          password: password,\r\n        },\r\n      })\r\n      history.push('/')\r\n    } catch (error) {\r\n      alert('Ошибка')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContainer onSubmit={onSubmit}>\r\n      <h2>Registration</h2>\r\n      <AuthInput\r\n        id=\"login\"\r\n        label=\"Login\"\r\n        value={login}\r\n        onChange={(event) => setLogin(event.target.value)}\r\n        disabled={loading}\r\n      />\r\n      <AuthInput\r\n        id=\"password\"\r\n        label=\"Password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        disabled={loading}\r\n        type=\"password\"\r\n      />\r\n      <AuthButton type=\"submit\" disabled={loading}>\r\n        Create account\r\n      </AuthButton>\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Registration\r\n","import { useMutation } from '@apollo/client'\r\nimport { useContext, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/context'\r\nimport { LOGIN_USER } from '../../graphql/mutation'\r\nimport AuthInput from '../../components/authInput/AuthInput'\r\nimport AuthButton from '../../components/authButton/AuthButton'\r\nimport AuthContainer from '../../components/authContainer/AuthContainer'\r\n\r\nconst Login = () => {\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER)\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n  const { setIsAuth } = useContext(AuthContext)\r\n  console.log(localStorage.getItem('token'))\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const { data } = await loginUser({\r\n        variables: { username: login, password: password },\r\n      })\r\n      console.log('login data: ', data)\r\n      localStorage.setItem('token', data.login)\r\n      if (localStorage.getItem('token')) setIsAuth(true)\r\n      history.push('/home')\r\n    } catch (error) {\r\n      alert('Ошибка')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContainer onSubmit={onSubmit}>\r\n      <h2>Login</h2>\r\n      <AuthInput\r\n        id=\"login\"\r\n        label=\"Login\"\r\n        value={login}\r\n        onChange={(event) => setLogin(event.target.value)}\r\n        disabled={loading}\r\n      />\r\n      <AuthInput\r\n        id=\"password\"\r\n        label=\"Password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        disabled={loading}\r\n        type=\"password\"\r\n      />\r\n      <AuthButton type=\"submit\" disabled={loading}>\r\n        Confirm\r\n      </AuthButton>\r\n      <AuthButton disabled={loading}>\r\n        <Link to=\"/registration\">Registration</Link>\r\n      </AuthButton>\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Box, Typography } from '@mui/material'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        alignItems: 'center',\r\n        backgroundColor: 'primary.main',\r\n        padding: '1rem',\r\n      }}\r\n      component=\"header\"\r\n    >\r\n      <Typography component=\"p\" variant=\"h5\" color=\"whitesmoke\">\r\n        Maybetomorrow\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useContext } from 'react'\r\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport MyTodos from '../../pages/myTodos/MyTodos'\r\nimport Registration from '../../pages/registration/Registration'\r\nimport Login from '../../pages/login/Login'\r\nimport { AuthContext } from '../../context/context'\r\nimport Header from '../header/Header'\r\n\r\nconst Router = () => {\r\n  const { isAuth } = useContext(AuthContext)\r\n\r\n  return (\r\n    <HashRouter>\r\n      {isAuth ? (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/home\">\r\n              <MyTodos />\r\n            </Route>\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/registration\">\r\n            <Registration />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      )}\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client'\r\nimport { setContext } from '@apollo/client/link/context'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: `${process.env.REACT_APP_SERVER_URL}`,\r\n})\r\n\r\nconst defaultOptions = {\r\n  watchQuery: {\r\n    fetchPolicy: 'network-only',\r\n    errorPolicy: 'ignore',\r\n  },\r\n  query: {\r\n    fetchPolicy: 'network-only',\r\n    errorPolicy: 'all',\r\n  },\r\n}\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('token')\r\n  console.log('Apollo Token: ', token)\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  }\r\n})\r\n\r\nconst apolloClient = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: defaultOptions,\r\n})\r\n\r\nexport default apolloClient\r\n","import './defaultStyles.css'\r\nimport Router from './components/router/Router'\r\nimport apolloClient from './utils/Apollo'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport { useEffect, useState } from 'react'\r\nimport { AuthContext } from './context/context'\r\n\r\nconst App = () => {\r\n  const [isAuth, setIsAuth] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      setIsAuth(true)\r\n    } else {\r\n      setIsAuth(false)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuth, setIsAuth }}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <Router />\r\n      </ApolloProvider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}